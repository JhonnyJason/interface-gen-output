// Generated by CoffeeScript 2.5.1
(function() {
  var M, fs, getHandlersName, getRoutesName, handlersTemplate, log, olog, ostr, p, print, routesTemplate, scifilesmodule;

  scifilesmodule = {
    name: "scifilesmodule"
  };

  //###########################################################
  //region printLogFunctions
  log = function(arg) {
    if (allModules.debugmodule.modulesToDebug["scifilesmodule"] != null) {
      console.log("[scifilesmodule]: " + arg);
    }
  };

  ostr = function(obj) {
    return JSON.stringify(obj, null, 4);
  };

  olog = function(obj) {
    return log("\n" + ostr(obj));
  };

  print = function(arg) {
    return console.log(arg);
  };

  //endregion

  //###########################################################
  fs = require("fs");

  M = require("mustache");

  //###########################################################
  p = null;

  routesTemplate = `{{#routes}}
############################################################
sciroutes.{{route}} = (req, res) ->
    try
        response = await h.{{route}}({{argsBlock}})
        res.send(response)
    catch err then res.send({error: err.stack})
    return

{{/routes}}`;

  handlersTemplate = `{{#routes}}
############################################################
scihandlers.{{route}} = ({{args}}) ->
    result = {}
    ###
    {{response}}
    ###
    return result


{{/routes}}`;

  //###########################################################
  scifilesmodule.initialize = function() {
    log("scifilesmodule.initialize");
    p = allModules.pathmodule;
  };

  
  //###########################################################
  getRoutesName = function(name) {
    name = name.toLowerCase();
    if (name.indexOf("routes") < 0) {
      name = name + "routes";
    }
    return name;
  };

  getHandlersName = function(name) {
    name = name.toLowerCase();
    if (name.indexOf("handlers") < 0) {
      name = name + "handlers";
    }
    return name;
  };

  //###########################################################
  scifilesmodule.writeFiles = function(interfaceObject, name) {
    var handlersFile, handlersFilePath, handlersName, routesFile, routesFilePath, routesName;
    log("scifilesmodule.writeFiles");
    routesName = getRoutesName(name);
    handlersName = getHandlersName(name);
    routesFile = M.render(routesTemplate, interfaceObject);
    handlersFile = M.render(handlersTemplate, interfaceObject);
    routesFilePath = p.getFilePath(routesName + ".coffee");
    fs.writeFileSync(routesFilePath, routesFile);
    handlersFilePath = p.getFilePath(handlersName + ".coffee");
    fs.writeFileSync(handlersFilePath, handlersFile);
  };

  module.exports = scifilesmodule;

}).call(this);
