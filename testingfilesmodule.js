// Generated by CoffeeScript 2.6.1
//#############################################################################
//region debug
var deployRequestTemplate, getDeployRequestsFileName, getLocalRequestsFileName, localRequestTemplate, log, olog, writeDeployRequestsFile, writeLocalRequestsFile;

import {
  createLogFunctions
} from "thingy-debug";

({log, olog} = createLogFunctions("testingfilesmodule"));

import fs from "fs";

import M from "mustache";

import * as p from "./pathmodule.js";

//###########################################################
//region templates
localRequestTemplate = `{{=<% %>=}}
<% #routes %>
### 
POST {{local}}/<%{route}%>
content-type: application/json

{
<%{requestBlock}%>
}
<% /routes %>
<%={{ }}=%>`;

//###########################################################
deployRequestTemplate = `{{=<% %>=}}
<% #routes %>
### 
POST {{deploy}}/<%{route}%>
content-type: application/json

{
<%{requestBlock}%>
}
<% /routes %>
<%={{{ }}}=%>`;

//endregion

//###########################################################
//region internalFunctions
getLocalRequestsFileName = function(name) {
  var l;
  name = name.toLowerCase();
  l = "interface".length; // get rid of "interface" postfix
  if (name.indexOf("interface") > 0) {
    name = name.slice(0, name.length - l);
  }
  if (name.indexOf("local") < 0) {
    name = name + "local";
  }
  return name;
};

//###########################################################
getDeployRequestsFileName = function(name) {
  var l;
  name = name.toLowerCase();
  l = "interface".length; // get rid of "interface" postfix
  if (name.indexOf("interface") > 0) {
    name = name.slice(0, name.length - l);
  }
  if (name.indexOf("deploy") < 0) {
    name = name + "deploy";
  }
  return name;
};

//###########################################################
writeLocalRequestsFile = function(interfaceObject, name) {
  var file, fileName, filePath;
  fileName = getLocalRequestsFileName(name);
  file = M.render(localRequestTemplate, interfaceObject);
  filePath = p.getFilePath(fileName + ".http");
  fs.writeFileSync(filePath, file);
};

writeDeployRequestsFile = function(interfaceObject, name) {
  var file, fileName, filePath;
  fileName = getDeployRequestsFileName(name);
  file = M.render(deployRequestTemplate, interfaceObject);
  filePath = p.getFilePath(fileName + ".http");
  fs.writeFileSync(filePath, file);
};

//endregion

//###########################################################
export var writeFiles = function(interfaceObject, name) {
  log("writeFiles");
  writeLocalRequestsFile(interfaceObject, name);
  writeDeployRequestsFile(interfaceObject, name);
};
