// Generated by CoffeeScript 2.6.1
//###########################################################
//region debug
var documentationParser, handlersParser, interfaceParser, log, olog;

import {
  createLogFunctions,
  debugOn
} from "thingy-debug";

({log, olog} = createLogFunctions("filesparsermodule"));

import {
  //endregion

  //###########################################################
  DocumentationFileParser
} from "./documentationparser.js";

import {
  InterfaceFileParser
} from "./interfaceparser.js";

import {
  HandlersFileParser
} from "./handlersparser.js";

//###########################################################
documentationParser = null;

interfaceParser = null;

handlersParser = null;

//###########################################################
export var initialize = function() {
  log("initialize");
};

//###########################################################
// debugOn("documentationparser")
// debugOn("interfaceparser")
// debugOn("handlersparser")
export var parseAllFiles = function() {
  log("parseAllFiles");
  documentationParser = new DocumentationFileParser();
  if (documentationParser.fileExists) {
    documentationParser.parse();
  } else {
    log("No documentation file found!");
  }
  interfaceParser = new InterfaceFileParser();
  if (interfaceParser.fileExists) {
    interfaceParser.parse();
  } else {
    log("No interface file found!");
  }
  handlersParser = new HandlersFileParser();
  if (handlersParser.fileExists) {
    handlersParser.parse();
  } else {
    log("No handlers file found!");
  }
};

//###########################################################
export var getParsedDocumentation = function() {
  if (documentationParser.parsed) {
    return documentationParser;
  }
  return null;
};

export var getParsedInterface = function() {
  if (interfaceParser.parsed) {
    return interfaceParser;
  }
  return null;
};

export var getParsedHandlers = function() {
  if (handlersParser.parsed) {
    return handlersParser;
  }
  return null;
};
