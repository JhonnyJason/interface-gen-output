// Generated by CoffeeScript 2.5.1
(function() {
  var cliargumentsmodule, extractMeowed, getHelpText, getOptions, log, meow, throwErrorOnUsageFail;

  cliargumentsmodule = {
    name: "cliargumentsmodule"
  };

  //region logPrintFunctions
  log = function(arg) {
    if (allModules.debugmodule.modulesToDebug["cliargumentsmodule"] != null) {
      console.log("[cliargumentsmodule]: " + arg);
    }
  };

  //endregion

  //#############################################################
  //region node_modules
  meow = require("meow");

  //endregion

  //#############################################################
  cliargumentsmodule.initialize = function() {
    log("cliargumentsmodule.initialize");
  };

  //#############################################################
  //region internal functions
  getHelpText = function() {
    log("getHelpText");
    return `Usage
    $ interface-gen <arg1>
    
Options
    required:
        arg1, --source <path/to/source>, -s <path/to/source>
        
Examples
    $  interface-gen definition.md
    ...`;
  };

  getOptions = function() {
    log("getOptions");
    return {
      flags: {
        source: {
          type: "string", // or string
          alias: "s"
        }
      }
    };
  };

  extractMeowed = function(meowed) {
    var source;
    log("extractMeowed");
    source = "";
    if (meowed.input[0]) {
      source = meowed.input[0];
    }
    if (meowed.flags.source) {
      source = meowed.flags.source;
    }
    return {source};
  };

  throwErrorOnUsageFail = function(extract) {
    log("throwErrorOnUsageFail");
    if (!extract.source) {
      throw new Error("Usag error: no source has been defined!");
    }
    if (!(typeof extract.source === "string")) {
      throw new Error("Usage error: defined source is not a string!");
    }
  };

  //endregion

  //#############################################################
  //region exposed functions
  cliargumentsmodule.extractArguments = function() {
    var extract, meowed;
    log("cliargumentsmodule.extractArguments");
    meowed = meow(getHelpText(), getOptions());
    extract = extractMeowed(meowed);
    throwErrorOnUsageFail(extract);
    return extract;
  };

  //endregion exposed functions
  module.exports = cliargumentsmodule;

}).call(this);
