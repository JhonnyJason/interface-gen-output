// Generated by CoffeeScript 2.6.1
//#############################################################################
//region debug
var absoluteBasePath, deployTestingFilePath, documentationFilePath, getFilePath, handlersFilePath, interfaceFilePath, isDirectory, localTestingFilePath, log, olog, routesFilePath;

import {
  createLogFunctions
} from "thingy-debug";

({log, olog} = createLogFunctions("pathhandlermodule"));

import path from "path";

import fs from "fs";

//###########################################################
//region variables
absoluteBasePath = "";

//###########################################################
documentationFilePath = "";

interfaceFilePath = "";

routesFilePath = "";

handlersFilePath = "";

localTestingFilePath = "";

deployTestingFilePath = "";

//endregion

//###########################################################
//region internal functions
getFilePath = function(name) {
  return path.resolve(absoluteBasePath, name);
};

isDirectory = function(testedPath) {
  var e, stats;
  try {
    stats = fs.lstatSync(testedPath);
    return stats.isDirectory();
  } catch (error) {
    e = error;
    return false;
  }
};

//endregion

//###########################################################
//region exports
export var createValidPaths = function(root, name) {
  var intefaceFilePath;
  absoluteBasePath = path.resolve(root);
  if (!isDirectory(absoluteBasePath)) {
    throw new Error("Error: Specified root path does not exist as directory!");
  }
  documentationFilePath = getFilePath(name + "interface.md");
  intefaceFilePath = getFilePath(name + "interface.coffee");
  routesFilePath = getFilePath(name + "routes.coffee");
  handlersFilePath = getFilePath(name + "handlers.coffee");
  localTestingFilePath = getFilePath(name + "local.http");
  deployTestingFilePath = getFilePath(name + "deploy.http");
};

//###########################################################
export var getDocumentationFilePath = function() {
  return documentationFilePath;
};

export var getInterfaceFilePath = function() {
  return interfaceFilePath;
};

export var getRoutesFilePath = function() {
  return routesFilePath;
};

export var getHandlersFilePath = function() {
  return handlersFilePath;
};

export var getLocalTestingFilePath = function() {
  return localTestingFilePath;
};

export var getDeployTestingFilePath = function() {
  return deployTestingFilePath;
};

//endregion
