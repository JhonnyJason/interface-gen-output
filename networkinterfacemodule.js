// Generated by CoffeeScript 2.6.1
//###########################################################
//region printLogFunctions
var getInterfaceName, log, olog, ostr, p, print, template;

log = function(arg) {
  if (allModules.debugmodule.modulesToDebug["networkinterfacemodule"] != null) {
    console.log("[networkinterfacemodule]: " + arg);
  }
};

ostr = function(obj) {
  return JSON.stringify(obj, null, 4);
};

olog = function(obj) {
  return log("\n" + ostr(obj));
};

print = function(arg) {
  return console.log(arg);
};

import fs from "fs";

import M from "mustache";

//###########################################################
p = null;

//###########################################################
//region templates
template = `import { postData } from "thingy-network-base"

############################################################
#region routes
{{#routes}}
export {{route}} = (sciURL, {{args}}) ->
    requestObject = { {{args}} }
    requestURL = sciURL+"/{{route}}"
    return postData(requestURL, requestObject)

{{/routes}}
#endregion`;

//endregion

//###########################################################
export var initialize = function() {
  log("initialize");
  p = allModules.pathmodule;
};


//###########################################################
getInterfaceName = function(name) {
  name = name.toLowerCase();
  if (name.indexOf("interface") < 0) {
    name = name + "interface";
  }
  return name;
};

//###########################################################
export var writeFile = function(interfaceObject, name) {
  var filePath, interfaceFile;
  log("writeFile");
  name = getInterfaceName(name);
  interfaceObject.name = name;
  interfaceFile = M.render(template, interfaceObject);
  filePath = p.getFilePath(name + ".coffee");
  fs.writeFileSync(filePath, interfaceFile);
};
