// Generated by CoffeeScript 2.6.1
(function() {
  var M, fs, getInterfaceName, log, networkinterfacemodule, olog, ostr, p, print, template;

  networkinterfacemodule = {
    name: "networkinterfacemodule"
  };

  //###########################################################
  //region printLogFunctions
  log = function(arg) {
    if (allModules.debugmodule.modulesToDebug["networkinterfacemodule"] != null) {
      console.log("[networkinterfacemodule]: " + arg);
    }
  };

  ostr = function(obj) {
    return JSON.stringify(obj, null, 4);
  };

  olog = function(obj) {
    return log("\n" + ostr(obj));
  };

  print = function(arg) {
    return console.log(arg);
  };

  //endregion

  //###########################################################
  fs = require("fs");

  M = require("mustache");

  //###########################################################
  p = null;

  //###########################################################
  template = `{{name}} = {}

############################################################
{{#routes}}
{{name}}.{{route}} = ({{args}}) ->
    requestObject = { {{args}} }
    interfaceServers = allModules.configmodule.interfaceServers
    requestURL = interfaceServers["{{name}}"]+"/{{route}}"
    return @postData(requestURL, requestObject)

{{/routes}}
#endregion

    
module.exports = {{name}}`;

  //###########################################################
  networkinterfacemodule.initialize = function() {
    log("networkinterfacemodule.initialize");
    p = allModules.pathmodule;
  };

  
  //###########################################################
  getInterfaceName = function(name) {
    name = name.toLowerCase();
    if (name.indexOf("interface") < 0) {
      name = name + "interface";
    }
    return name;
  };

  //###########################################################
  //region exposedFunctions
  networkinterfacemodule.writeFile = function(interfaceObject, name) {
    var filePath, interfaceFile;
    log("networkinterfacemodule.writeFile");
    name = getInterfaceName(name);
    interfaceObject.name = name;
    interfaceFile = M.render(template, interfaceObject);
    filePath = p.getFilePath(name + ".coffee");
    fs.writeFileSync(filePath, interfaceFile);
  };

  //endregion
  module.exports = networkinterfacemodule;

}).call(this);
